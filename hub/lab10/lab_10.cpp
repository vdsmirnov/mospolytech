// здесь происходит подключениее модулей задач
#include "lab_10_1.cpp"
#include "lab_10_2.cpp"
#include "lab_10_3.cpp"
#include "lab_10_4.cpp"
#include "lab_10_5.cpp"
#include "lab_10_6.cpp"
#include "lab_10_7.cpp"

using namespace std;

int user_input_lab_10 = 1;

void user_fall_lab_10() {
    while (user_input_lab_10 < 0 || user_input_lab_10 > 7) {
        cout << endl << "!! Введите другое число, равное номеру задачи !!" << endl;
        cout << "Введите номер нужной работы или введите 0 для завершения программы: ";
        cin >> user_input_lab_10;
    }
}

void lab_10() {
    while (user_input_lab_10 != 0) {
        system("cls");
        cout << "Лабораторная работа №10\nВведите номер задачи, чтобы запустить её" << endl << endl;
        cout << "1. Даны два целых числа: A, B. Проверить истинность высказывания: «Справедливы неравенства A > 2 и B <= 3»" << endl;
        cout << "2. Даны три целых числа: A, B, C. Проверить истинность высказывания: «Справедливо двойное неравенство A < B < C»" << endl;
        cout << "3. Дано целое положительное число. Проверить истинность высказывания: «Данное число является четным двузначным»" << endl;
        cout << "4. Дано трехзначное число. Проверить истинность высказывания: «Цифры данного числа образуют возрастающую или убывающую последовательность»" << endl;
        cout << "5. Дано четырехзначное число. Проверить истинность высказывания: «Данное число читается одинаково слева направо и справа налево»" << endl;
        cout << "6. Даны целые числа a, b, c, являющиеся сторонами некоторого треугольника. Проверить истинность высказывания: «Треугольник со сторонами a, b, c является прямоугольным»" << endl;
        cout << "7. Даны целые числа a, b, c. Проверить истинность высказывания: «Существует треугольник со сторонами a, b, c»" << endl;
        cout << endl << "Введите номер нужной задачи или введите 0 для закрытия лаб. работы: ";
        cin >> user_input_lab_10;
        user_fall_lab_10();
        switch (user_input_lab_10) {
        case 1:
            lab_10_1();
            break;
        case 2:
            lab_10_2();
            break;
        case 3:
            lab_10_3();
            break;
        case 4:
            lab_10_4();
            break;
        case 5:
            lab_10_5();
            break;
        case 6:
            lab_10_6();
            break;
        case 7:
            lab_10_7();
            break;
        }
    }
    system("cls");
}