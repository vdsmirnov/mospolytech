// здесь происходит подключениее модулей задач
#include "lab_16_1.cpp"
#include "lab_16_2.cpp"
#include "lab_16_3.cpp"
#include "lab_16_4.cpp"
#include "lab_16_5.cpp"

using namespace std;

int user_input_lab_16 = 1;

void user_fall_lab_16() {
    while (user_input_lab_16 < 0 || user_input_lab_16 > 5) {
        cout << endl << "!! Введите другое число, равное номеру задачи !!" << endl;
        cout << "Введите номер нужной работы или введите 0 для завершения программы: ";
        cin >> user_input_lab_16;
    }
}

void lab_16() {
    while (user_input_lab_16 != 0) {
        system("cls");
        cout << "Лабораторная работа №16\nВведите номер задачи, чтобы запустить её" << endl << endl;
        cout << "1. Дано целое число N (> 0). Сформировать и вывести целочисленный массив размера N, содержащий N первых положительных нечетных чисел: 1, 3, 5, ..." << endl;
        cout << "2. Дано целое число N (> 1), а также первый член A и знаменатель D геометрической прогрессии. Сформировать и вывести массив размера N, содержащий N первых членов данной прогрессии: A, AxD, AxD2 , AxD3 , ..." << endl;
        cout << "3. Даны целые числа N (> 2), A и B. Сформировать и вывести целочисленный массив размера N, первый элемент которого равен A, второй равен B, а каждый последующий элемент равен сумме всех предыдущих" << endl;
        cout << "4. Дан массив A размера N. Вывести его элементы в следующем порядке: A1, AN , A2, AN−1, A3, AN−2 " << endl;
        cout << "5. Дан массив A размера N. Вывести вначале его элементы с нечетными номерами в порядке возрастания номеров, а затем — элементы с четными номерами в порядке убывания номеров" << endl;
        cout << endl << "Введите номер нужной задачи или введите 0 для закрытия лаб. работы: ";
        cin >> user_input_lab_16;
        user_fall_lab_16();
        switch (user_input_lab_16) {
        case 1:
            lab_16_1();
            break;
        case 2:
            lab_16_2();
            break;
        case 3:
            lab_16_3();
            break;
        case 4:
            lab_16_4();
            break;
        case 5:
            lab_16_5();
            break;
        }
        system("cls");

    }
}